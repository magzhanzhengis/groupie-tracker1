{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "uiyfg",
  "steps": [
    {
      "file": "static/script.js",
      "description": "\n## 🔥 The Problem: **CORS Error**\n\nYou saw this in your browser console:\n\n```\nAccess to fetch at 'https://groupietrackers.herokuapp.com/api/artists'\nfrom origin 'http://localhost:8080' has been blocked by CORS policy\n```\n\n---\n\n## 🧠 What is CORS?\n\n**CORS** = *Cross-Origin Resource Sharing*\n\nIt’s a security rule that says:\n\n> \"If your webpage is from `localhost:8080`, it **can’t** make requests to another domain (like `herokuapp.com`) **unless** that other domain **explicitly allows it**.\"\n\nThis protects users from malicious scripts.\n\n---\n\n### ❌ Your Mistake\n\nYour JavaScript did this:\n```js\nfetch(\"https://groupietrackers.herokuapp.com/api/artists\")\n```\n\nThat means:\n- Your web page is running at `http://localhost:8080`\n- But you're directly asking a **different server** (Heroku) for data\n\nThis is called a **cross-origin request**, and **the Groupie API does not allow it**, so the browser blocks it.\n\n---\n\n### ✅ The Fix: **Use Go as a proxy**\n\nInstead of letting the browser talk directly to the API (which causes CORS), we told **Go to do it**.\n\nThen your browser only talks to your own server (which is allowed).\n\n---\n\n### 🛠️ Step-by-Step Fix:\n\n#### ✅ 1. Create a new Go handler for `/api/artists`\nThis handler fetches the data **from the Groupie API**, and sends it to the browser:\n\n```go\nhttp.HandleFunc(\"/api/artists\", func(w http.ResponseWriter, r *http.Request) {\n\tresp, err := http.Get(\"https://groupietrackers.herokuapp.com/api/artists\")\n\tif err != nil {\n\t\thttp.Error(w, \"Failed to fetch artists\", http.StatusInternalServerError)\n\t\treturn\n\t}\n\tdefer resp.Body.Close()\n\n\tw.Header().Set(\"Content-Type\", \"application/json\")\n\tio.Copy(w, resp.Body)\n})\n```\n\n#### ✅ 2. Update your frontend JavaScript:\nChange this:\n```js\nfetch(\"https://groupietrackers.herokuapp.com/api/artists\") // ❌ blocked by CORS\n```\n\nTo this:\n```js\nfetch(\"/api/artists\") // ✅ allowed, because it's the same origin\n```\n\nNow your JavaScript calls your own Go server, which then calls the real API.\n\n---\n\n## 🔁 Diagram of What Changed\n\n**Before (bad):**\n```\nBrowser (localhost) ─────> Groupie API (Heroku) ❌ (Blocked by CORS)\n```\n\n**After (good):**\n```\nBrowser (localhost) ──> Your Go Server ──> Groupie API ✅\n                  👈────── JSON Comes Back ────────👈\n```\n\n---\n\n## 📌 Final Summary\n\n| Mistake                               | Fix                                       |\n|----------------------------------------|-------------------------------------------|\n| JS tried to fetch from external API directly | Let Go fetch the data instead (proxy) |\n| API didn’t allow cross-origin requests | Go server and browser are same origin ✅ |\n| JS was blocked by browser (CORS policy) | JS now talks to Go server (no CORS issue) |\n\n---\n\nWould you like to build a general-purpose proxy handler for any API or customize it further (add query support, error messages, etc.)?",
      "line": 2
    }
  ]
}